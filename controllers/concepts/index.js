// Generated by CoffeeScript 1.4.0

/*
* This is the routing for the concept posts.
*/


(function() {
  var baseController, conceptModule, knownodeModule;

  conceptModule = require('../../modules/concept');

  baseController = require('../baseController');

  knownodeModule = require('../../modules/knownode');

  module.exports = {
    options: {
      before: {
        create: [baseController.isAdmin],
        destroy: [baseController.isAdmin]
      }
    },
    index: function(request, response) {
      var cb, concept;
      cb = baseController.callBack(response);
      concept = new conceptModule(request.user);
      return concept.getAllConcepts(cb);
    },
    show: function(request, response) {
      var cb, concept, id;
      concept = new conceptModule(request.user);
      cb = baseController.callBack(response);
      id = request.params.concept.replace(/:/g, '');
      return concept.getConceptByKnownodeId(id, cb);
    },
    create: function(request, response) {
      var cb, concept;
      concept = new conceptModule(request.user);
      cb = baseController.callBack(response);
      return concept.createNewConcept(request.body.concept, cb);
    },
    destroy: function(request, response) {
      var cb, concept, id;
      concept = new conceptModule(request.user);
      cb = baseController.callBack(response);
      id = request.params.concept.replace(/:/g, '');
      return concept.deleteConcept(id, cb);
    },
    getRelatedKnownodes: function(request, response) {
      var cb, id, modKnownode;
      cb = baseController.callBack(response);
      modKnownode = new knownodeModule(request.user);
      id = request.params.concept.replace(/:/g, '');
      return modKnownode.getRelatedKnownodesToKnowNodeId(id, cb);
    }
  };

}).call(this);
