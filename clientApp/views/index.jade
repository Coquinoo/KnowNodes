extends layout

block content
    div(ng-view).row.fill

    script(src='//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js')
    script(src='//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js')
    script(src='//ajax.googleapis.com/ajax/libs/angularjs/1.0.5/angular.min.js')
    script(src='js/lib/angular/angular-resource.min.js')
    script(src='js/lib/bootstrap/bootstrap.min.js')
    script(src='js/lib/angular-strap/angular-strap.min.js')
    script(src='js/lib/angular-ui/angular-ui.js')
    script(src='js/lib/select2/select2.min.js')
    script(src='js/app.js')
    script(src='js/services.js')
    script(src='js/controllers.js')
    script(src='js/filters.js')
    script(src='js/directives.js')

    script
        // That was my only method to connect the user from the server session into the client. it's ugly, I know.
        // it could be better if we create a specific service in the server that returns the connected user and the client asks it upon login.
        var KN = KN || {};
        KN.initAngularUser = function () {
            var userString = '#{JSON.stringify(user)}';
            userString = userString.replace(/\&nbsp\;/g, ' ');
            userString = userString.replace(/&quot;/g, '"');
            return userString ? JSON.parse(userString) : null;
        }
    script(src="js/switchButton.js")
    script(src="js/lib/less/less-1.3.3.min.js")
    script(src='js/lib/less/less.js')
    script(src="js/lib/angular-ui-bootstrap/ui-bootstrap-tpls-0.1.0-SNAPSHOT.js")
