/*** Generated by streamline 0.6.0 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var Connection, ConnectionValidator, Connections, Error, Notifications, OwnedEntities, Type, _ref, __hasProp = {
  }.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) { if (__hasProp.call(parent, key)) { child[key] = parent[key]; }; }; function ctor() { this.constructor = child; }; ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  OwnedEntities = require("./OwnedEntities");

  Type = require("./../model/Type");

  ConnectionValidator = require("./../model/validation/ConnectionValidator");

  Connection = require("./../model/Connection");

  Notifications = require("./Notifications");

  Error = require("../error/Error");

  module.exports = Connections = (function(_super) {
    __extends(Connections, _super);

    function Connections() {
      _ref = Connections.__super__.constructor.apply(this, arguments);
      return _ref; };


    Connections.getNodeType = function() {
      return Type.CONNECTION; };


    Connections.wrap = function(node) {
      return new Connection(node); };


    Connections.create = function Connections_create__1(startResource, endResource, creator, data, _) { var connection, __this = this; var __frame = { name: "Connections_create__1", line: 34 }; return __func(_, this, arguments, Connections_create__1, 4, __frame, function __$Connections_create__1() {

        if ((((((startResource == null)) || ((endResource == null))) || ((creator == null))) || ((data == null)))) {
          return _(Error.illegalArgument("null", "Connections.create()")); } ;

        return Connections.__super__.constructor.create.call(__this, data, creator, __cb(_, __frame, 5, 19, function ___(__0, __1) { connection = __1;
          return startResource.node.createRelationshipTo(connection.node, "RELATED_TO", { }, __cb(_, __frame, 6, 6, function __$Connections_create__1() {
            return connection.node.createRelationshipTo(endResource.node, "RELATED_TO", { }, __cb(_, __frame, 7, 6, function __$Connections_create__1() {
              return Notifications.notifyConnectionCreated(startResource, endResource, connection, creator, __cb(_, __frame, 8, 6, function __$Connections_create__1() {
                return _(null, connection); }, true)); }, true)); }, true)); }, true)); }); };


    Connections.latestTriplets = function Connections_latestTriplets__2(user, _) { var aWeekAgo, cypherQuery, item, luceneQuery, nodes, now, results, toPush, userNodeId, _i, _len, _ref1, _ref2, __this = this; var __frame = { name: "Connections_latestTriplets__2", line: 46 }; return __func(_, this, arguments, Connections_latestTriplets__2, 1, __frame, function __$Connections_latestTriplets__2() {

        now = Date.now();
        aWeekAgo = (now - ((((1000 * 60) * 60) * 24) * 7));
        luceneQuery = (((("__CreatedOn__:[" + aWeekAgo) + " TO ") + now) + "]");
        if (user) {
          userNodeId = user.node.id; }
         else {
          userNodeId = 0; } ;

        cypherQuery = (((("START connection=node:kn_Edge('" + luceneQuery) + "'), user=node(") + userNodeId) + ")\nMATCH (startResource) -[:RELATED_TO]-> (connection) -[:RELATED_TO]-> (endResource),\n(connection) -[:CREATED_BY]- (connectionCreator),\n(startResource) -[?:CREATED_BY]- (startResourceCreator),\n(endResource) -[?:CREATED_BY]- (endResourceCreator),\n(connection) -[?:COMMENT_OF]- (connectionComments),\n(user) -[upvote?:VOTED_UP] - (connection),\n(user) -[downvote?:VOTED_DOWN] - (connection),\n(startResourceOtherConnections)-[?:RELATED_TO]-(startResource),\n(endResourceOtherConnections)-[?:RELATED_TO]-(endResource)\nWHERE startResource <> endResource\nAND startResourceOtherConnections <> connection\nAND endResourceOtherConnections <> connection\nRETURN upvote, downvote, connection, startResource, endResource, startResourceCreator, endResourceCreator, connectionCreator,\ncount(connectionComments) AS connectionCommentsCount,\ncount(startResourceOtherConnections) AS startResourceOtherConnectionsCount,\ncount(endResourceOtherConnections) AS endResourceOtherConnectionsCount\nORDER BY connection.__CreatedOn__ DESC\nLIMIT 100");
        return __this.DB.query(cypherQuery, null, __cb(_, __frame, 11, 16, function ___(__0, __1) { results = __1;
          nodes = [];
          for (_i = 0, _len = results.length; (_i < _len); _i++) {
            item = results[_i];
            toPush = {
              connection: item.connection.data,
              startResource: item.startResource.data,
              endResource: item.startResource.data };

            toPush.commentCount = item.connectionCommentsCounts;
            toPush.connection.creator = item.connectionCreator.data;
            toPush.startResource.creator = (((_ref1 = item.startResourceCreator) != null) ? _ref1.data : void 0);
            toPush.endResource.creator = (((_ref2 = item.endResourceCreator) != null) ? _ref2.data : void 0);
            toPush.startResource.otherConnectionsCount = item.startResourceOtherConnectionsCount;
            toPush.endResource.otherConnectionsCount = item.endResourceOtherConnectionsCount;
            toPush.votedUp = (item.upvote != null);
            toPush.votedDown = (item.downvote != null);
            nodes.push(toPush); };

          return _(null, nodes); }, true)); }); };


    Connections.hottestTriplets = function Connections_hottestTriplets__3(user, _) { var aMonthAgo, cypherQuery, hot, hotness, item, luceneQuery, nodes, noveltyInDays, now, results, toPush, userNodeId, _i, _len, _ref1, _ref2, __this = this; var __frame = { name: "Connections_hottestTriplets__3", line: 79 }; return __func(_, this, arguments, Connections_hottestTriplets__3, 1, __frame, function __$Connections_hottestTriplets__3() {

        now = Date.now();
        aMonthAgo = (now - ((((1000 * 60) * 60) * 24) * 30));
        luceneQuery = (((("__CreatedOn__:[" + aMonthAgo) + " TO ") + now) + "]");
        if (user) {
          userNodeId = user.node.id; }
         else {
          userNodeId = 0; } ;

        cypherQuery = (((("START connection=node:kn_Edge('" + luceneQuery) + "'), user=node(") + userNodeId) + ")\nMATCH (startResource) -[:RELATED_TO]-> (connection) -[:RELATED_TO]-> (endResource),\n(connection) -[:CREATED_BY]- (connectionCreator),\n(startResource) -[?:CREATED_BY]- (startResourceCreator),\n(endResource) -[?:CREATED_BY]- (endResourceCreator),\n(connection) -[?:COMMENT_OF]- (connectionComments),\n(connection) -[?:VOTED_UP]- (upvotes),\n(connection) -[?:VOTED_DOWN]- (downvotes),\n(user) -[hasVotedUp?:VOTED_UP]-> (connection),\n(user) -[hasVotedDown?:VOTED_DOWN]-> (connection),\n(startResourceOtherConnections)-[?:RELATED_TO]-(startResource),\n(endResourceOtherConnections)-[?:RELATED_TO]-(endResource)\nWHERE startResource <> endResource\nAND startResourceOtherConnections <> connection\nAND endResourceOtherConnections <> connection\nRETURN connection, startResource, endResource, startResourceCreator, endResourceCreator, connectionCreator,\ncount(distinct connectionComments) AS commentCount,\ncount(distinct upvotes) AS upvoteCount,\ncount(distinct downvotes) AS downvoteCount,\ncount(distinct startResourceOtherConnections) AS startResourceOtherConnectionCount,\ncount(distinct endResourceOtherConnections) AS endResourceOtherConnectionCount,\nhasVotedUp, hasVotedDown\nORDER BY connection.__CreatedOn__ DESC\nLIMIT 200");
        noveltyInDays = function(creationDate) {
          var seconds;
          seconds = ((creationDate / 1000) - 1370000000);
          return (seconds / ((3600 * 24))); };

        hotness = function(upvotes, downvotes, creationDate) {
          var novelty, order, score, sign, voteBoost;
          score = (upvotes - downvotes);
          novelty = noveltyInDays(creationDate);
          if ((score > 0)) {
            sign = 1; }
           else if ((score < 0)) {
            sign = -1; }
           else {
            sign = 0; }  ;

          voteBoost = 3;
          order = ((Math.log(Math.max(Math.abs(score), 1)) * voteBoost) * sign);
          return Math.round((((order + novelty)) * 10)); };

        return __this.DB.query(cypherQuery, null, __cb(_, __frame, 31, 16, function ___(__0, __1) { results = __1;
          nodes = [];
          for (_i = 0, _len = results.length; (_i < _len); _i++) {
            item = results[_i];
            toPush = {
              upvotes: item.upvoteCount,
              downvotes: item.downvoteCount,
              userUpvoted: item.hasVotedUp,
              userDownvoted: item.hasVotedDown,
              startResource: item.startResource.data,
              endResource: item.endResource.data,
              connection: item.connection.data };

            toPush.commentCount = item.commentCount;
            toPush.connection.creator = item.connectionCreator.data;
            if ((toPush.connection.status === "deleted")) {
              toPush.connection.creator.firstName = "deleted";
              toPush.connection.creator.lastName = " ";
              toPush.connection.creator.KN_ID = "deleted";
              toPush.connection.creator.dateOfBirth = "deleted";
              toPush.connection.creator.email = "deleted";
              toPush.connection.creator.email = "deleted";
              toPush.connection.creator.password = "deleted"; } ;

            hot = hotness(item.upvoteCount, item.downvoteCount, item.connection.data["__CreatedOn__"]);
            toPush.connection.hotness = hot;
            toPush.startResource.creator = (((_ref1 = item.startResourceCreator) != null) ? _ref1.data : void 0);
            toPush.endResource.creator = (((_ref2 = item.endResourceCreator) != null) ? _ref2.data : void 0);
            toPush.startResource.connectionCount = item.startResourceOtherConnectionCount;
            toPush.endResource.connectionCount = item.endResourceOtherConnectionCount;
            nodes.push(toPush); };

          return _(null, nodes); }, true)); }); };


    return Connections;

  })(OwnedEntities);

}).call(this);