/*** Generated by streamline 0.6.0 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var NodeWrappers, Type, User, UserValidator, Users, bcrypt, cache, _ref, __hasProp = {
  }.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) { if (__hasProp.call(parent, key)) { child[key] = parent[key]; }; }; function ctor() { this.constructor = child; }; ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  NodeWrappers = require("./NodeWrappers");

  User = require("./../model/User");

  Type = require("./../model/Type");

  UserValidator = require("./../model/validation/UserValidator");

  cache = require("memory-cache");

  bcrypt = require("bcrypt");

  module.exports = Users = (function(_super) {
    __extends(Users, _super);

    function Users() {
      _ref = Users.__super__.constructor.apply(this, arguments);
      return _ref; };


    Users.VALIDATOR = new UserValidator;

    Users.getNodeType = function() {
      return Type.USER; };


    Users.wrap = function(node) {
      return new User(node); };


    Users.create = function Users_create__1(data, _) { var hashedPassword, __this = this; var __frame = { name: "Users_create__1", line: 36 }; return __func(_, this, arguments, Users_create__1, 1, __frame, function __$Users_create__1() {

        hashedPassword = bcrypt.hashSync(data.password, 4);
        data.password = hashedPassword;
        return Users.__super__.constructor.create.call(__this, data, __cb(_, __frame, 4, 13, _, true)); }); };


    Users.findById = function Users_findById__2(id, _) { var user, userNode, __this = this; var __frame = { name: "Users_findById__2", line: 43 }; return __func(_, this, arguments, Users_findById__2, 1, __frame, function __$Users_findById__2() {

        user = cache.get(("USER_" + id)); return (function __$Users_findById__2(__then) {
          if ((user == null)) {
            return __this.DB.getIndexedNode("kn_User", "KN_ID", id, __cb(_, __frame, 4, 19, function ___(__0, __1) { userNode = __1;
              user = new User(userNode);
              cache.put(("USER_" + user.getId()), user, 1000);
              return _(null, user); }, true)); } else { __then(); } ; })(_); }); };



    Users.findByEmail = function Users_findByEmail__3(email, _) { var __this = this; var __frame = { name: "Users_findByEmail__3", line: 54 }; return __func(_, this, arguments, Users_findByEmail__3, 1, __frame, function __$Users_findByEmail__3() {
        return __this.findByTextProperty("email", __cb(_, __frame, 1, 13, _, true)); }); };


    Users.karma = function Users_karma__4(id, _) { var query, user, __this = this; var __frame = { name: "Users_karma__4", line: 58 }; return __func(_, this, arguments, Users_karma__4, 1, __frame, function __$Users_karma__4() {

        return __this.findById(id, __cb(_, __frame, 2, 13, function ___(__0, __1) { user = __1;
          query = (("START user=node(" + user.node.id) + ")\nMATCH (connection) -[:CREATED_BY]- (user),\n(connection) -[?:VOTED_UP]- (upvotes),\n(connection) -[?:VOTED_DOWN]- (downvotes)\nWHERE connection.nodeType = 'kn_Edge'\nRETURN count(upvotes) - count(downvotes) AS karma");
          return __this.DB.query(query, null, __cb(_, __frame, 4, 13, function ___(__0, __3) { var __2 = __3[0].karma; return _(null, __2); }, true)); }, true)); }); };


    return Users;

  })(NodeWrappers);

}).call(this);