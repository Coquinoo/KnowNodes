/*** Generated by streamline 0.6.0 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func; (function() {
  var LogDB, Logger, Loggly;

  LogDB = require("../DB/LogDB");

  Loggly = require("loggly");

  module.exports = Logger = (function() {
    function Logger(source) {
      var logglyConfig;
      this.source = source;
      this.currentStage = 3;
      logglyConfig = {
        auth: {
          username: "dorgarbash",
          password: "dorIsGarbash1" },

        subdomain: "knownodes" };

      this.logglyLogger = Loggly.createClient(logglyConfig); };


    Logger.prototype.log = function(level, content) {
      var message;
      message = ((((("" + level) + ": ") + this.source) + " - ") + content);
      console.log(message);
      return this.logglyLogger.log("0bf69f08-e6f2-4c42-8f39-4b5a606c8c90", message); };


    Logger.prototype.error = function Logger_prototype_error__1(content, _) { var __this = this; var __frame = { name: "Logger_prototype_error__1", line: 30 }; return __func(_, this, arguments, Logger_prototype_error__1, 1, __frame, function __$Logger_prototype_error__1() {
        return _(null, __this.log("ERROR", content)); }); };


    Logger.prototype.warning = function Logger_prototype_warning__2(content, _) { var __this = this; var __frame = { name: "Logger_prototype_warning__2", line: 34 }; return __func(_, this, arguments, Logger_prototype_warning__2, 1, __frame, function __$Logger_prototype_warning__2() {
        if ((__this.currentStage > 0)) {
          return _(null, __this.log("WARNING", content)); } ; _(); }); };



    Logger.prototype.info = function Logger_prototype_info__3(content, _) { var __this = this; var __frame = { name: "Logger_prototype_info__3", line: 40 }; return __func(_, this, arguments, Logger_prototype_info__3, 1, __frame, function __$Logger_prototype_info__3() {
        if ((__this.currentStage > 1)) {
          return _(null, __this.log("INFO", content)); } ; _(); }); };



    Logger.prototype.debug = function Logger_prototype_debug__4(content, _) { var __this = this; var __frame = { name: "Logger_prototype_debug__4", line: 46 }; return __func(_, this, arguments, Logger_prototype_debug__4, 1, __frame, function __$Logger_prototype_debug__4() {
        if ((__this.currentStage > 2)) {
          return _(null, __this.log("DEBUG", content)); } ; _(); }); };



    return Logger;

  })();

}).call(this);