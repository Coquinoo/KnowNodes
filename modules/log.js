// Generated by CoffeeScript 1.6.1
(function() {
  var BaseModule, Log, LogDB,
    _this = this,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  BaseModule = require('./baseModule');

  LogDB = require('../DB/LogDB');

  module.exports = Log = (function(_super) {

    __extends(Log, _super);

    function Log(user) {
      var _this = this;
      this.logDebug = function(title, content, _) {
        return Log.prototype.logDebug.apply(_this, arguments);
      };
      this.logError = function(title, content, _) {
        return Log.prototype.logError.apply(_this, arguments);
      };
      this.logActivity = function(title, content, _) {
        return Log.prototype.logActivity.apply(_this, arguments);
      };
      Log.__super__.constructor.call(this, user);
      this.currentStage = 3;
    }

    Log.prototype.logActivity = function(title, content, _) {
      var log;
      title = "Activity: " + title;
      console.log(title + '-' + content);
      if (this.currentStage > 2) {
        log = new LogDB.Log;
        log.user = this.user && this.user.id ? this.user.id : "anonymous";
        log.title = title;
        log.content = content;
        return log.save(console.log);
      }
    };

    Log.prototype.logError = function(title, content, _) {
      var log;
      title = "ERROR: " + title;
      console.log(title + '-' + content);
      log = new LogDB.Log;
      log.user = this.user && this.user.id ? this.user.id : "anonymous";
      log.title = title;
      log.content = content;
      return log.save(console.log);
    };

    Log.prototype.logDebug = function(title, content, _) {
      var log;
      title = "DEBUG: " + title;
      console.log(title + '-' + content);
      if (this.currentStage > 1) {
        log = new LogDB.Log;
        log.user = this.user && this.user.id ? this.user.id : "anonymous";
        log.title = title;
        log.content = content;
        return log.save(console.log);
      }
    };

    return Log;

  })(BaseModule);

}).call(this);
